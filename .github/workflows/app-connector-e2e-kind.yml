name: Tests on kind

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '0 * * * *' # every hour

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - name: Prepare docker registry, kind, helm 3 & istioctl
      run: |
        echo "Installing kind"
        GO111MODULE="on" go get sigs.k8s.io/kind@v0.9.0
        echo "Installing istioctl"
        ./download-istioctl.sh
        sudo chmod +x istioctl
        echo "Starting docker registry"
        # create registry container unless it already exists
        reg_name='kind-registry'
        reg_port='5000'
        running="$(docker inspect -f '{{.State.Running}}' "${reg_name}" 2>/dev/null || true)"
        if [ "${running}" != 'true' ]; then
        docker run \
            -d --restart=always -p "${reg_port}:5000" --name "${reg_name}" \
            registry:2
        fi
        echo "starting cluster"
        # create a cluster with the local registry enabled in containerd
        cat <<EOF | kind create cluster --name kyma --config=-
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        nodes:
        - role: control-plane
          kubeadmConfigPatches:
          - |
            kind: InitConfiguration
            nodeRegistration:
            kubeletExtraArgs:
                node-labels: "ingress-ready=true"
          image: kindest/node:v1.18.8@sha256:f4bcc97a0ad6e7abaf3f643d890add7efe6ee4ab90baeb374b4f41a4c95567eb
          extraPortMappings:
          - containerPort: 30000
            hostPort: 80
            protocol: tcp
            listenAddress: "127.0.0.1"
          - containerPort: 30001
            hostPort: 443
            protocol: tcp
            listenAddress: "127.0.0.1"
          - containerPort: 30002
            hostPort: 15021
            protocol: tcp
            listenAddress: "127.0.0.1"
        EOF

        # connect the registry to the cluster network
        docker network connect "kind" "${reg_name}"

        for node in $(kind get nodes --name kyma); do
          kubectl annotate node "${node}" "kind.x-k8s.io/registry=localhost:${reg_port}";
        done
        echo "Installing helm"
        curl -s https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    - name: Install istio
      run: |
        ### Install istio 1.5.10-distroless
        ./istioctl manifest apply -f kind-istio-install.yaml
    - name: Install Kyma
      env: 
        SKIP_MODULES: apiserver-proxy,helm-broker,console,cluster-users,apiserver-proxy,logging,tracing
      run: |
        ./download-kyma-charts.sh
        ./install-kyma-kind.sh
        sudo cp kyma.crt /usr/local/share/ca-certificates
        sudo update-ca-certificates
    - name: Install Commerce Mock
      run: |
        ./commerce-mock.sh
    - name: Run End To End Test
      run: |
        ./app-connector-example.sh
